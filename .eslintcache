[{"/home/vansolo/Documents/qtab_academy/qtab-admin/src/index.js":"1","/home/vansolo/Documents/qtab_academy/qtab-admin/src/reportWebVitals.js":"2","/home/vansolo/Documents/qtab_academy/qtab-admin/src/App.js":"3","/home/vansolo/Documents/qtab_academy/qtab-admin/src/store.js":"4","/home/vansolo/Documents/qtab_academy/qtab-admin/src/reducers/index.js":"5","/home/vansolo/Documents/qtab_academy/qtab-admin/src/reducers/main_reducer.js":"6","/home/vansolo/Documents/qtab_academy/qtab-admin/src/Promise.js":"7","/home/vansolo/Documents/qtab_academy/qtab-admin/src/isPromise.js":"8","/home/vansolo/Documents/qtab_academy/qtab-admin/src/actions/main_actions.js":"9","/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/general.js":"10","/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/courses.js":"11","/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/students.js":"12"},{"size":650,"mtime":1608081447087,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608033700200,"results":"15","hashOfConfig":"14"},{"size":4244,"mtime":1608084155279,"results":"16","hashOfConfig":"14"},{"size":315,"mtime":1608069582504,"results":"17","hashOfConfig":"14"},{"size":151,"mtime":1608069582424,"results":"18","hashOfConfig":"14"},{"size":3983,"mtime":1608072739216,"results":"19","hashOfConfig":"14"},{"size":8371,"mtime":1608070308192,"results":"20","hashOfConfig":"14"},{"size":182,"mtime":1608070308260,"results":"21","hashOfConfig":"14"},{"size":3903,"mtime":1608072540752,"results":"22","hashOfConfig":"14"},{"size":2780,"mtime":1608076833707,"results":"23","hashOfConfig":"14"},{"size":10778,"mtime":1608080942075,"results":"24","hashOfConfig":"14"},{"size":7430,"mtime":1608083814291,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18eu9lz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":6,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vansolo/Documents/qtab_academy/qtab-admin/src/index.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/reportWebVitals.js",[],["53","54"],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/App.js",["55","56","57","58"],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/store.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/reducers/index.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/reducers/main_reducer.js",["59","60","61","62","63","64","65","66"],"\nimport isEmpty from 'lodash/isEmpty';\nimport mapKeys from 'lodash/mapKeys';\nimport moment from 'moment'\nimport omit from 'lodash/omit'\nimport valuesIn from 'lodash/valuesIn';\n\n// import * as actionType from './../../Actions/comments/commentTypes';\nimport typeToReducer from 'type-to-reducer';\n\n\n\nconst INITIAL_STATE = {\n    is_opened_side_bar:false\n}\n\nconst main = typeToReducer({\n\n\n    ['TOGGLE_SIDE_BAR']: (state, action) => ({\n        ...state,\n        is_opened_side_bar: !state.is_opened_side_bar,\n    }),\n\n    ['PREVIEW_LOG']: (state, action) => ({\n        ...state,\n        log_to_preview:action.payload\n    }),\n\n\n    ['UPDATE_LOG']: {\n        PENDING: state => ({\n            ...state,\n            isUpdatingLog: true\n        }),\n        FULFILLED: (state, action) => {\n            let logs = state.logs,\n                updatedLog = action.payload.log;\n            const updatedLogs = valuesIn(logs).map(log=> {\n                if (log.id === updatedLog.id) {\n                    return (log = updatedLog);\n                } else {\n                    return log;\n                }\n            });\n            return {\n                ...state,\n                errors: {},\n                logs: { ...updatedLogs },\n                isShowUpdateLogModal:false,\n                isUpdatedEquipment: true,\n                isUpdatingLog: false,\n                isUpdatedLog: true,\n            };\n        },\n        REJECTED: (state, action) => ({\n            ...state,\n            errors: {\n                ...action.payload.errors\n            },\n            isUpdatingLog: false,\n            isUpdatedLog: true\n        })\n    },\n\n    ['GET_LOGS']: {\n        PENDING: state => ({\n            ...state,\n            ...state.posts,\n            isFetchingLogs:true\n\n        }),\n        FULFILLED: (state, action) => ({\n            ...state,\n            ...state.logs,\n            logs: {\n                ...action.payload.logs\n            },\n            isFetchingLogs:false,\n            isFetchedLogs:true\n\n        }),\n\n        REJECTED: (state, action) => ({\n            ...state,\n            ...state.posts,\n            hasError: action.error,\n            isFetchingLogs:false,\n            isFetchedLogs:false\n\n        })\n    },\n\n\n    ['DELETE_LOG']: {\n        PENDING: (state, action) => ({\n            ...state,\n            ...state.logs,\n            isDeletingLog: true\n        }),\n        FULFILLED: (state, action) => {\n            let logs = mapKeys(state.logs, 'id'),\n                id = action.payload.log.id,\n                remainingLogs = omit(logs, [id]);\n            return {\n                ...state,\n                errors: {},\n                logs: {\n                    ...remainingLogs\n                },\n                isDeletedLog: true,\n                isDeletingLog: false\n\n            };\n        },\n        REJECTED: (state, action) => {\n            let errors = action.payload;\n            return {\n                ...state,\n                errors: errors,\n                isDeletingLog: false,\n                isDeletedLog: false\n            };\n        }\n    },\n\n    ['NEW_LOG']: {\n        PENDING: state => ({\n            ...state,\n            isCreatingNewLog: true,\n            isCreatedNewLog: false\n        }),\n        FULFILLED: (state, action) => {\n            let newIndex = valuesIn(state.logs).length + 1 - 1,\n                logs = {...state.logs, [newIndex]: action.payload.log}\n            return {\n                ...state,\n                logs: {...logs},\n                isCreatingNewLog: false,\n                isCreatedNewLog: true,\n                isShowNewLogForm:false\n\n            };\n        },\n        REJECTED: (state, action) => {\n            let errors = action.payload;\n            return {\n                ...state,\n                errors: errors,\n                isCreatingNewLog: false,\n                isCreatedNewLog: false\n            };\n        }\n    },\n\n\n\n\n},INITIAL_STATE);\n\nexport default main","/home/vansolo/Documents/qtab_academy/qtab-admin/src/Promise.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/isPromise.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/actions/main_actions.js",["67"],"import axios from 'axios';\n\nimport {message} from 'antd'\n\n\n\n\nlet axiosConfig = {\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n        'token': sessionStorage.getItem('token'),\n        'Authorization':'Token' + ' ' + sessionStorage.getItem('token')\n    }\n};\n\n\nexport const toggleSideBar = (payload) => ({\n    type: 'TOGGLE_SIDE_BAR',\n    payload: payload\n});\n\nexport const showNewProductModal = (payload) => ({\n    type: 'SHOW_NEW_PRODUCT_MODAL',\n    payload: payload\n});\n\nexport const toggleUpdateProductModal = (payload) => ({\n    type: 'TOGGLE_UPDATE_PRODUCT_MODAL',\n    payload: payload\n});\n\nexport const toggleSibeBar = (payload) => ({\n    type: 'TOGGLE_SIDE_BAR',\n    payload: payload\n});\nexport const setProduct = (payload) => ({\n    type: 'SET_PRODUCT',\n    payload: payload\n});\n\n\n\n\n\n\n//\n\n// export function getPosts() {\n//     return dispatch => {\n//         // axios.defaults.headers = Auth.retrieveData('authHeaders');\n//         dispatch({\n//             type: postTypes.GET_POSTS,\n//             payload: new Promise((resolve, reject) => {\n//                 axios\n//                     .get(`http://localhost:3000/posts`, axiosConfig)\n//                     .then(response => resolve(response.data))\n//                     .then(response => resolve(response.data))\n//                     .catch(error => reject(error))\n//             })\n//         });\n//     };\n// }\n\n\nexport function getProducts() {\n    return {\n        type: 'GET_PRODUCTS',\n\n        payload: new Promise((resolve, reject) => {\n            // axios.get('https://prodsapi.herokuapp.com/esi')\n            axios.get('')\n                .then(response => resolve(response.data))\n                .catch(error => reject(error))\n        })\n    }\n}\n\n\n\nexport function userLogin(user) {\n    return {\n        type: 'USER_LOGIN',\n\n        payload: new Promise((resolve, reject) => {\n            axios.post('https://litro-api.herokuapp.com/login', user, axiosConfig)\n                .then(response => resolve(response.data))\n                .catch(error => reject(error))\n        })\n    }\n}\n\nexport function userLogout() {\n    return {\n        type:'USER_LOGOUT',\n\n        payload: new Promise((resolve, reject) => {\n            axios.delete('https://litro-api.herokuapp.com/logout', axiosConfig)\n                .then(response => resolve(response.data))\n                .catch(error => reject(error))\n        })\n    }\n}\n\n\n\nexport function deleteProduct(id) {\n    return {\n        type: 'DELETE_PRODUCT',\n\n        payload: new Promise((resolve, reject) => {\n            axios.delete(`https://litro.herokuapp.com/esi/${id}`, axiosConfig)\n                .then(response => resolve(response.data))\n                .then(message.success('New product deleted successfully'))\n                .catch(error => reject(error))\n        })\n    }\n}\n\n\nexport function updateProduct(product) {\n    return {\n        type: 'UPDATE_PRODUCT',\n\n        payload: new Promise((resolve, reject) => {\n            axios.put(`https://litro-api.herokuapp.com/esi/${product.id}`,\n                {\n                    product:{\n                        source:product.source,\n                        category:product.category\n                    }\n                },\n                axiosConfig)\n                .then(response => resolve(response.data))\n                .then(message.success('New product update successfully'))\n                .catch(error => reject(error))\n        })\n    }\n}\n\n\nexport function newProduct(product) {\n    return {\n        type: 'NEW_PRODUCT',\n\n        payload: new Promise((resolve, reject) => {\n            axios.post('https://litro-api.herokuapp.com/esi', product, axiosConfig)\n                .then(response => resolve(response.data))\n                .then(message.success('New product added successfully'))\n                .catch(error => reject(error))\n        })\n    }\n}\n\n","/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/general.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/courses.js",[],"/home/vansolo/Documents/qtab_academy/qtab-admin/src/components/tab-contents/students.js",["68","69","70","71","72","73","74","75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"88","line":36,"column":69,"nodeType":"89","messageId":"90","endLine":36,"endColumn":84,"fix":"91"},{"ruleId":"87","severity":1,"message":"88","line":48,"column":69,"nodeType":"89","messageId":"90","endLine":48,"endColumn":84,"fix":"92"},{"ruleId":"87","severity":1,"message":"88","line":60,"column":69,"nodeType":"89","messageId":"90","endLine":60,"endColumn":84,"fix":"93"},{"ruleId":"83","severity":1,"message":"94","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":15},{"ruleId":"83","severity":1,"message":"95","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":20,"column":5,"nodeType":"98","messageId":"99","endLine":23,"endColumn":7,"fix":"100"},{"ruleId":"96","severity":1,"message":"101","line":25,"column":5,"nodeType":"98","messageId":"99","endLine":28,"endColumn":7,"fix":"102"},{"ruleId":"96","severity":1,"message":"103","line":31,"column":5,"nodeType":"98","messageId":"99","endLine":64,"endColumn":6,"fix":"104"},{"ruleId":"96","severity":1,"message":"105","line":66,"column":5,"nodeType":"98","messageId":"99","endLine":92,"endColumn":6,"fix":"106"},{"ruleId":"96","severity":1,"message":"107","line":95,"column":5,"nodeType":"98","messageId":"99","endLine":125,"endColumn":6,"fix":"108"},{"ruleId":"96","severity":1,"message":"109","line":127,"column":5,"nodeType":"98","messageId":"99","endLine":154,"endColumn":6,"fix":"110"},{"ruleId":"111","severity":1,"message":"112","line":13,"column":33,"nodeType":"113","messageId":"114","endLine":13,"endColumn":34},{"ruleId":"83","severity":1,"message":"115","line":3,"column":9,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"116","line":3,"column":15,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":13,"column":29,"nodeType":"119","endLine":16,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":27,"column":29,"nodeType":"119","endLine":30,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":41,"column":29,"nodeType":"119","endLine":44,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":57,"column":29,"nodeType":"119","endLine":60,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":71,"column":29,"nodeType":"119","endLine":74,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":85,"column":29,"nodeType":"119","endLine":88,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":101,"column":29,"nodeType":"119","endLine":104,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":115,"column":29,"nodeType":"119","endLine":118,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":129,"column":29,"nodeType":"119","endLine":132,"endColumn":31},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property toggleTab.","MemberExpression","unexpectedWhitespace",{"range":"122","text":"123"},{"range":"124","text":"123"},{"range":"125","text":"123"},"'isEmpty' is defined but never used.","'moment' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['TOGGLE_SIDE_BAR'] found.","Property","unnecessarilyComputedProperty",{"range":"126","text":"127"},"Unnecessarily computed property ['PREVIEW_LOG'] found.",{"range":"128","text":"129"},"Unnecessarily computed property ['UPDATE_LOG'] found.",{"range":"130","text":"131"},"Unnecessarily computed property ['GET_LOGS'] found.",{"range":"132","text":"133"},"Unnecessarily computed property ['DELETE_LOG'] found.",{"range":"134","text":"135"},"Unnecessarily computed property ['NEW_LOG'] found.",{"range":"136","text":"137"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Rate' is defined but never used.","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1248,1250],".",[1841,1843],[2437,2439],[388,407],"'TOGGLE_SIDE_BAR'",[517,532],"'PREVIEW_LOG'",[626,640],"'UPDATE_LOG'",[1639,1651],"'GET_LOGS'",[2239,2253],"'DELETE_LOG'",[3098,3109],"'NEW_LOG'"]